// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, urlSearchParamsBodySerializer } from '@hey-api/client-axios';
import type { PostAccountsSignupV1Data, PostAccountsSignupV1Response, PostAccountsSignupV1Error, PostAccountsLoginV1Data, PostAccountsLoginV1Response, PostAccountsLoginV1Error, GetAccountsProfileMeV1Data, GetAccountsProfileMeV1Response, GetAccountsProfileMeV1Error, PatchAccountsProfileMeV1Data, PatchAccountsProfileMeV1Error, PostAccountsRefreshTokenV1Data, PostAccountsRefreshTokenV1Response, PostAccountsRefreshTokenV1Error, PostAccountsResetPasswordV1Data, PostAccountsResetPasswordV1Error, PostAccountsConfirmResetPasswordV1Data, PostAccountsConfirmResetPasswordV1Error, HealthCheckHealthGetData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Signup
 */
export const postAccountsSignupV1 = <ThrowOnError extends boolean = false>(options: Options<PostAccountsSignupV1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountsSignupV1Response, PostAccountsSignupV1Error, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v1/accounts/signup',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * Login
 */
export const postAccountsLoginV1 = <ThrowOnError extends boolean = false>(options: Options<PostAccountsLoginV1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountsLoginV1Response, PostAccountsLoginV1Error, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v1/accounts/login',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * Get Self Account Profile
 */
export const getAccountsProfileMeV1 = <ThrowOnError extends boolean = false>(options?: Options<GetAccountsProfileMeV1Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAccountsProfileMeV1Response, GetAccountsProfileMeV1Error, ThrowOnError>({
        url: '/api/v1/accounts/profile/me',
        ...options
    });
};

/**
 * Update Account Profile
 */
export const patchAccountsProfileMeV1 = <ThrowOnError extends boolean = false>(options?: Options<PatchAccountsProfileMeV1Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).patch<unknown, PatchAccountsProfileMeV1Error, ThrowOnError>({
        url: '/api/v1/accounts/profile/me',
        ...options
    });
};

/**
 * Refresh Token
 * Endpoint to refresh the JWT access token using the refresh token
 */
export const postAccountsRefreshTokenV1 = <ThrowOnError extends boolean = false>(options: Options<PostAccountsRefreshTokenV1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountsRefreshTokenV1Response, PostAccountsRefreshTokenV1Error, ThrowOnError>({
        url: '/api/v1/accounts/refresh-token',
        ...options
    });
};

/**
 * Create Password Reset
 */
export const postAccountsResetPasswordV1 = <ThrowOnError extends boolean = false>(options: Options<PostAccountsResetPasswordV1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, PostAccountsResetPasswordV1Error, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v1/accounts/reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * Confirm Password Reset
 */
export const postAccountsConfirmResetPasswordV1 = <ThrowOnError extends boolean = false>(options: Options<PostAccountsConfirmResetPasswordV1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, PostAccountsConfirmResetPasswordV1Error, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/v1/accounts/confirm-reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * Health Check
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/health',
        ...options
    });
};